apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: acicbookapi
  description: The book API
  tags:
    - store
    - rest
  links:
    - url: https://github.com/acirom/acic-api-book
      title: GitHub Repo
      icon: github
spec:
  type: openapi
  lifecycle: experimental
  owner: teamacic
  definition: |
    openapi: 3.0.0
    servers:
      - url: http://acic-api-book.cnr.tap.tanzu.vxlab.local
    info:
      description: |-
        This is a sample Test API
      version: 1.0.0
      title: Web API Acic
    tags:
      - name: book
        description: Test book CRUD
    paths:
      /books:
        get:
          tags:
            - booksGET
          summary: Get all books
          description: books description
          operationId: lookForBooks
          responses:
            '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/books'
          security:
            - api_key: []
      /book:
        post:
          tags:
            - bookPOST
          summary: Add a new book
          description: Add a new book to the catalog
          operationId: addBook
          parameters:
            - name: ID
              in: path
              description: Book ID
              required: true
              schema:
                type: integer
                format: int64
            - name: BookTitle
              in: query
              description: The title of book.
              schema:
                type: string
            - name: author
              in: query
              description: The author of book.
              schema:
                type: string
            - name: publisher
              in: query
              description: The publisher of book.
              schema:
                type: string
          responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/addBook'
            '405':
              description: Invalid input
          security:
            - books_auth:
                - 'write:books'
                - 'read:books'
    components:
      schemas:
        books:
          title: Book List
          description: Lits books.
          type: object
          properties:
            id:
              title: ID
              description: Book ID
              type: string
              minLength: 1
              maxLength: 30
              pattern: '^[a-zA-Z]*$'
              example: BID001
            title:
              title: BookTitle
              description: The title of book.
              type: string
              minLength: 1
              maxLength: 30
              pattern: '^[a-zA-Z]*$'
              example: Book Title
            author:
              title: author
              description: The author of book.
              type: string
              minLength: 1
              maxLength: 255
              example: 'Name Lastname'
            publisher:
              title: publisher
              description: The publisher of book.
              type: string
              minLength: 1
              maxLength: 80
              example: Publisher Author
        addBook:
          title: Book add
          description: add book.
          type: object
          properties:
            id:
              title: ID
              description: Book ID
              type: string
              minLength: 1
              maxLength: 30
              pattern: '^[a-zA-Z]*$'
              example: BID001
            title:
              title: BookTitle
              description: The title of book.
              type: string
              minLength: 1
              maxLength: 30
              pattern: '^[a-zA-Z]*$'
              example: Book Title
            author:
              title: author
              description: The author of book.
              type: string
              minLength: 1
              maxLength: 255
              example: 'Name Lastname'
            publisher:
              title: publisher
              description: The publisher of book.
              type: string
              minLength: 1
              maxLength: 80
              example: Publisher Author
          required:
            - id
            - title
            - author
            - publisher
      securitySchemes:
        api_key:
          type: apiKey
          name: api_key
          in: header